{"version":3,"sources":["components/Form.tsx","components/List.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Form","form","setForm","useState","name","rate","review","input","setInput","handleChange","e","target","value","className","type","onChange","onClick","preventDefault","parseInt","handleClick","List","map","i","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPA4DeA,EApDgB,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACpC,EAA0BC,mBAAS,CAC/BC,KAAM,GACNC,KAAM,GACNC,OAAQ,KAHZ,mBAAOC,EAAP,KAAcC,EAAd,KAMMC,EAAe,SAACC,GAClBF,EAAS,2BACFD,GADC,kBAEHG,EAAEC,OAAOP,KAAOM,EAAEC,OAAOC,UAqBlC,OACI,uBAAMC,UAAU,GAAhB,UACI,sBAAKA,UAAU,gBAAf,UACI,gCACI,kDACA,uBAAOA,UAAU,WAAWC,KAAK,OAAOV,KAAK,OAAOQ,MAAOL,EAAMH,KAAMW,SAAU,SAACL,GAAD,OAAOD,EAAaC,SAEzG,gCACI,mDACA,uBAAOG,UAAU,kBAAkBC,KAAK,SAASV,KAAK,OAAOQ,MAAOL,EAAMF,KAAMU,SAAU,SAACL,GAAD,OAAOD,EAAaC,YAGtH,gCACI,mDACA,0BAAUG,UAAU,WAAWT,KAAK,SAASQ,MAAOL,EAAMD,OAAQS,SAAU,SAACL,GAAD,OAAOD,EAAaC,SAEpG,wBAAQG,UAAU,SAASC,KAAK,SAASE,QAAS,SAACN,GAAD,OAjCtC,SAACA,GACjBA,EAAEO,iBACGV,EAAMH,MAASG,EAAMF,OAG1BH,EAAQ,GAAD,mBAAKD,GAAL,CAAW,CACdG,KAAMG,EAAMH,KACZC,KAAMa,SAASX,EAAMF,MACrBC,OAAQC,EAAMD,WAElBE,EAAS,CACLJ,KAAM,GACNC,KAAM,GACNC,OAAQ,MAoBiDa,CAAYT,IAArE,wBCxBGU,EA3BgB,SAAC,GAAc,IAAZnB,EAAW,EAAXA,KAajC,OACC,qBAAKY,UAAU,WAAf,SACC,kCACC,+BACC,uCACA,sCACA,2CAfFZ,EAAKoB,KAAI,SAAAC,GACR,OAAQ,+BACP,6BAAKA,EAAElB,OACP,6BAAKkB,EAAEjB,OACP,6BAAKiB,EAAEhB,qBC0BGiB,MAzBf,WACE,MAAwBpB,mBAAyB,CAC/C,CACEC,KAAM,gBACNC,KAAM,EACNC,OAAQ,uBAEV,CACEF,KAAM,aACNC,KAAM,IACNC,OAAQ,8CATZ,mBAAOL,EAAP,KAAaC,EAAb,KAaA,OACE,sBAAKW,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,2BACA,sBAAKA,UAAU,YAAf,UACE,cAAC,EAAD,CAAMZ,KAAMA,IACZ,cAAC,EAAD,CAAMA,KAAMA,EAAMC,QAASA,WClBpBsB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.8145d2bf.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { IState as Props } from \"../App\"\n\ninterface IProps {\n    form: Props[\"form\"],\n    setForm: React.Dispatch<React.SetStateAction<Props[\"form\"]>>\n}\n\nconst Form: React.FC<IProps> = ({ form, setForm }) => {\n    const [input, setInput] = useState({\n        name: \"\",\n        rate: \"\",\n        review: \"\"\n    })\n\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>): void => {\n        setInput({\n            ...input,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    const handleClick = (e: React.MouseEvent<HTMLButtonElement>): void => {\n        e.preventDefault();\n        if (!input.name || !input.rate) {\n            return\n        }\n        setForm([...form, {\n            name: input.name,\n            rate: parseInt(input.rate),\n            review: input.review\n        }])\n        setInput({\n            name: \"\",\n            rate: \"\",\n            review: \"\"\n        })\n    }\n\n    return (\n        <form className=\"\">\n            <div className=\"first formDiv\">\n                <div>\n                    <h3>Enter movie name</h3>\n                    <input className=\"inputBox\" type='text' name=\"name\" value={input.name} onChange={(e) => handleChange(e)} />\n                </div>\n                <div>\n                    <h3>Enter your rating</h3>\n                    <input className=\"inputBox rating\" type='number' name=\"rate\" value={input.rate} onChange={(e) => handleChange(e)} />\n                </div>\n            </div>\n            <div>\n                <h3>Enter your review</h3>\n                <textarea className=\"inputBox\" name=\"review\" value={input.review} onChange={(e) => handleChange(e)}></textarea>\n            </div>\n            <button className=\"button\" type=\"submit\" onClick={(e) => handleClick(e)}>Submit</button>\n        </form>\n    );\n}\n\nexport default Form;","import React from \"react\"\nimport { IState as IProps } from \"../App\"\nimport \"../App.css\"\n\nconst List: React.FC<IProps> = ({ form }) => {\n\n\tconst mapList = (): JSX.Element[] => {\n\t\treturn (\n\t\t\tform.map(i => {\n\t\t\t\treturn (<tr>\n\t\t\t\t\t<td>{i.name}</td>\n\t\t\t\t\t<td>{i.rate}</td>\n\t\t\t\t\t<td>{i.review}</td>\n\t\t\t\t</tr>)\n\t\t\t})\n\t\t)\n\t}\n\treturn (\n\t\t<div className=\"tableDiv\">\n\t\t\t<table>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Movie</th>\n\t\t\t\t\t<th>Rate</th>\n\t\t\t\t\t<th>review</th>\n\t\t\t\t</tr>\n\t\t\t\t{mapList()}\n\t\t\t</table>\n\t\t</div>\n\t)\n}\n\nexport default List","import React, { useState } from 'react';\nimport './App.css';\nimport Form from './components/Form';\nimport List from \"./components/List\"\n\nexport interface IState {\n  form: {\n    name: string,\n    rate: number,\n    review?: string\n  }[]\n}\n\nfunction App() {\n  const [form, setForm] = useState<IState[\"form\"]>([\n    {\n      name: \"Spirited Away\",\n      rate: 9,\n      review: \"Beautifully written\"\n    },\n    {\n      name: \"Mean Girls\",\n      rate: 7.5,\n      review: \"Classic chick flick for girl's night out\"\n    }\n  ])\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\">My Watch List</h1>\n      <div className=\"form-card\">\n        <List form={form} />\n        <Form form={form} setForm={setForm} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}